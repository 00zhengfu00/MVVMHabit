apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    resourcePrefix "goldze_"
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
    }
    dataBinding {
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:' + rootProject.ext.support["appcompat-v7"]
    testCompile 'junit:junit:4.12'
    //rxjava
    compile rootProject.ext.dependencies.rxjava
    compile rootProject.ext.dependencies.rxandroid
    //rx管理View的生命周期
    compile rootProject.ext.dependencies.rxlifecycle
    compile rootProject.ext.dependencies["rxlifecycle-components"]
    //rxbinding
    compile rootProject.ext.dependencies.rxbinding
    //rx权限请求
    compile rootProject.ext.dependencies.rxpermissions
    //network
    compile rootProject.ext.dependencies.okhttp
    compile rootProject.ext.dependencies.retrofit
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]
    //json解析
    compile rootProject.ext.dependencies.gson
    //material-dialogs
    compile rootProject.ext.dependencies.core
    compile rootProject.ext.dependencies.commons
    //下拉刷新,上拉加载
    compile rootProject.ext.dependencies.tkrefreshlayout
    //glide图片加载库
    compile rootProject.ext.dependencies.glide
    //recyclerview的databinding套装
    compile rootProject.ext.dependencies.bindingcollectionadapter
    compile rootProject.ext.dependencies["bindingcollectionadapter-recyclerview"]
}


//发布到jcenter配置
version = "1.0.0"//版本号
def siteUrl = "https://github.com/goldze"      // 项目的主页   这个是说明，可随便填
def gitUrl = "https://github.com/goldze/MVVMHabit"    // Git仓库的url  这个是说明，可随便填
group = "me.goldze" // groupId
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey
    configurations = ['archives']
    pkg {
        repo = "Maven"
        name = "mvvmhabit"    //发布到JCenter上的项目名字，必须填写
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name '基于MVVM设计模式的一套快速开发库，整合Okhttp+RxJava+Retrofit+Glide等必备流行开源库，满足日常开发需求。'
                //项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'glodze'        //填写开发者的一些基本信息
                        name 'glodze'    //填写开发者的一些基本信息
                        email 'goldze@126.com'   //填写开发者的一些基本信息
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}